data = {
    'themes': {
        'default': {
            'questions': [
                [
                    {
                        'type': 'simple',
                        'body': 'Вам бывает скучно на работе?',
                        'answers': ['нет', 'да'],
                        'resource': '',
                    },
                    {
                        'type': 'simple',
                        'body': 'Сколько шариков для гольфа поместится в школьный автобус? (Google)',
                        'answers': ['500000', '0', '1000000'],
                        'resource': '',
                    },
                    {
                        'type': 'text',
                        'body': ' На столе вращается волчок. У вас есть несколько булавок. Как определить, в какую сторону он вертится?',
                        'answers': "Разогнуть булавку, легонько поднести к волчку и от удара булавка наклонится в одну или другую сторону.",
                        'resource': '',
                    }
                ],
                [
                    {
                        'type': 'text',
                        'body': 'Объясните, что такое база данных в трех предложениях, чтобы понял ваш племянник',
                        'answers': "База данных — это машина, которая запоминает большое количество информации о разных вещах. Люди используют ее, чтобы вспомнить эту информацию, когда им нужно. Пойдем играть в футбол.",
                        'resource': '',
                    },
                    {
                        'type': 'text',
                        'body': 'Как бы вы описали код восьмилетнему ребёнку.',
                        'answers': "Код — это правило, согласно которому информация превращается в шифр. Его нужно писать аккуратно и внимательно. Код, как и почерк, может многое рассказать об авторе.",
                        'resource': '',
                    },
                    {
                        'type': 'text',
                        'body': 'Почему мы не должны брать вас на работу?',
                        'answers': "должны я крутой лучший потомучто",
                        'resource': '',
                    }
                ],
                [
                    {
                        'type': 'text',
                        'body': 'Если бы Вы хотели привести на работу собаку, но один из ваших коллег страдает от аллергии на собачью шерсть, что бы Вы сделали??',
                        'answers': " учесть интересы коллеги",
                        'resource': '',
                    },
                    {
                        'type': 'simple',
                        'body': 'Сколько шариков для гольфа поместится в школьный автобус? (Google)',
                        'answers': ['500000', '0', '1000000'],
                        'resource': '',
                    },
                    {
                        'type': 'text',
                        'body': ' Сколько настройщиков пианино во всем мире?',
                        'answers': ['40', '0', '2'],
                        'resource': '',
                    }
                ],
            ]
        }
    },
    'oop': {
        'questions': [
            [
                {
                    'type': 'text',
                    'body': 'Что такое ООП?',
                    'answers': "ООП - методология программирования, основанная на представлении программного продукта в виде совокупности объектов, каждый из которых является экземпляром конкретного класса. ООП использует в качестве базовых элементов взаимодействие объектов.",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5',
                },
                {
                    'type': 'simple',
                    'body': 'Как расшифровать ооп с точки зрения программирования?',
                    'answers': ['объектно-ориентированное программирование', 'основная образовательная программа',
                                'относительно ограниченная (во времени) память'],
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5',
                },
                {
                    'type': 'text',
                    'body': 'Что такое объект?',
                    'answers': "Объект - именнованная модель реальной сущности, обладающая конкретными значениями свойств и проявляющая свое поведение, обладающий именем набор данных (полей и свойств объекта), физически находящихся в памяти компьютера, и методов, имеющих доступ к ним. Объект -конкретный экземпляр класса.",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5',
                },
                {
                    'type': 'text',
                    'body': 'Назовите основные принципы ООП.',
                    'answers': "Принято считать, что объектно-ориентированное программирование строится на 4 основных принципах (раньше их было всего 3). Эти принципы: абстракция, наследование, полиморфизм",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5',
                },
            ],
            [
                {
                    'type': 'text',
                    'body': 'Что такое наследование?',
                    'answers': "Наследование это процесс благодаря которому один объект может приобрести свойства другого объекта (наследование всех свойств одного объекта другим)",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5',
                },
                {
                    'type': 'text',
                    'body': 'Что такое инкапсуляция?',
                    'answers': "Инкапсуляция - это значит ограничивать доступ одних компонентов программы к другими, скрывая детали реализации; это то, как мы определяем видимость свойств и методов класса используя модификаторы доступа:public: публичный, общедоступный. Свойства и методы, объявленные с модификатором public, видны другим классам.private: закрытый, противоположность модификатору public. Закрытый класс или член класса доступен только из кода в том же классе.protected: доступ разрешон только внутри самого класса и наследующим его классам.",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5',
                },
                {
                    'type': 'text',
                    'body': 'Что такое наследование?',
                    'answers': "Инкапсуляция - это значит ограничивать доступ одних компонентов программы к другими, скрывая детали реализации; это то, как мы определяем видимость свойств и методов класса используя модификаторы доступа:public: публичный, общедоступный. Свойства и методы, объявленные с модификатором public, видны другим классам.private: закрытый, противоположность модификатору public. Закрытый класс или член класса доступен только из кода в том же классе.protected: доступ разрешон только внутри самого класса и наследующим его классам.Наследование это концепция, в которой один класс разделяет структуру и поведение, определенные в другом классе. Класс наследник создаёться на основе уже существующего класса - родитель (базовый) - сохраняя эго функциональность не копируя код и имея возможность менять или добавить дополнительную функциональность. ",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5',
                }
            ],
            [
                {
                    'type': 'text',
                    'body': 'Что такое интерфейс в ООП?',
                    'answers': "Интерфейс коллекция методов которых должен реализовать класс, без необходимости определять, как эти методы обрабатываются. Тела этих методов должны быть public и пустыми в интерфейсе. Все методы из интерфейса должны быть реализованы в классе. А сам класс может реализовать более одного интерфейса.",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5',
                },
                {
                    'type': 'text',
                    'body': 'Что такое указатель THIS?',
                    'answers': "Указатель THIS относится к текущему объекту класса. THIS используется как указатель, который отличает текущий объект от глобального объекта. Этот указатель существует всюду внутри класса, его не надо как-то явно объявлять, к нему можно обращаться внутри любого метода класса.",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5',
                },
                {
                    'type': 'text',
                    'body': 'Что такое namespace в ООП?',
                    'answers': "Namespace - пространство имен - обеспечивает способ группировки связанных классов, интерфейсов, функций и констант. Нужен для организации кода в логические группы и предотвращения конфликтов имен, которые могут возникнуть, когда код включает в себя несколько библиотек с теми же названиями классов. Абстрактно говоря это способ инкапсуляции элементов.",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5',
                }
            ]
        ]
    },
    'bd': {
        'questions': [
            [
                {
                    'type': 'text',
                    'body': 'Что подразумевается под СУБД?',
                    'answers': "База данных — структурированная коллекция данных. Система управления базами данных (СУБД) — программное обеспечение, которое взаимодействует с пользователем, приложениями и самой базой данных для сбора и анализа данных. СУБД позволяет пользователю взаимодействовать с базой данных. Данные, хранящиеся в базе данных, могут быть изменены, извлечены и удалены. Они могут быть любых типов, таких как строки, числа, изображения и т. д.",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D0%B7%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85',
                },
                {
                    'type': 'text',
                    'body': 'В чем разница между SQL и MySQL?',
                    'answers': "SQL — стандартный язык структурированных запросов (Structured Query Language) на основе английского языка, тогда как MySQL — система управления базами данных. SQL — язык реляционной базы данных, который используется для доступа и управления данными, MySQL — реляционная СУБД (система управления базами данных), также как и SQL Server, Informix и т. д.",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D0%B7%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85',
                },
                {
                    'type': 'text',
                    'body': 'Что вы подразумеваете под «триггером» в SQL?',
                    'answers': "Триггер в SQL — особый тип хранимых процедур, которые предназначены для автоматического выполнения в момент или после изменения данных. Это позволяет вам выполнить пакет кода, когда вставка, обновление или любой другой запрос выполняется к определенной таблице.",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D0%B7%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85',
                }
            ],
            [
                {
                    'type': 'text',
                    'body': 'Что такое уникальный ключ (Unique key)?',
                    'answers': "SQL — стандартный язык структурированных запросов (Structured Query Language) на основе английского языка, тогда как MySQL — система управления базами данных. SQL — язык реляционной базы данных, который используется для доступа и управления данными, MySQL — реляционная СУБД (система управления базами данных), также как и SQL Server, Informix и т. д.Однозначно идентифицирует одну строку в таблице.опустимо множество уникальных ключей в одной таблице.Допустимы NULL-значения (прим. перевод.: зависит от СУБД, в SQL Server значение NULL может быть добавлено только один раз в поле с UNIQUE KEY).",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D0%B7%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85',
                },
                {
                    'type': 'text',
                    'body': 'Что такое внешний ключ (Foreign key)?',
                    'answers': "Внешний ключ поддерживает ссылочную целостность, обеспечивая связь между данными в двух таблицах.Внешний ключ в дочерней таблице ссылается на первичный ключ в родительской таблице.Ограничение внешнего ключа предотвращает действия, которые разрушают связи между дочерней и родительской таблицами.",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D0%B7%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85',
                },
                {
                    'type': 'text',
                    'body': 'Какие операторы доступны в SQL?',
                    'answers': "В SQL доступно три типа оператора, а именно: Арифметические Операторы Логические Операторы Операторы сравнения",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D0%B7%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85',
                },
            ],
            [
                {
                    'type': 'text',
                    'body': 'Что подразумевается под целостностью данных?',
                    'answers': "Целостность данных определяет точность, а также согласованность данных, хранящихся в базе данных. Она также определяет ограничения целостности для обеспечения соблюдения бизнес-правил для данных, когда они вводятся в приложение или базу данных.",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D0%B7%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85',
                },
                {
                    'type': 'text',
                    'body': 'Напишите SQL-запрос для отображения текущей даты.',
                    'answers': "В SQL есть встроенная функция GetDate (), которая помогает возвращать текущий timestamp/дату.",
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D0%B7%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85',
                },
                {
                    'type': 'text',
                    'body': 'Совпадают ли значения NULL со значениями нуля или пробела?',
                    'answers': ['да', 'нет'],
                    'resource': 'https://ru.wikipedia.org/wiki/%D0%91%D0%B0%D0%B7%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85',
                },
            ]
        ]
    },
    'git': {
        'questions': [
            [
                {
                    'type': 'text',
                    'body': 'Что такое GIT?',
                    'answers': "GIT - это распределенная система управления версиеями файлов и координация работы над ними среди множества людей.",
                    'resource': 'https://ru.wikipedia.org/wiki/Git',
                },
                {
                    'type': 'text',
                    'body': 'В чем разница между Git и Subversion(SVN)?',
                    'answers': "- Git больше отслеживает контент, а не файлы SVN создает каталоги .svn в каждой отдельной папке (Git создает только один каталог .git для всего проекта) Репозитории Git намного меньше по размеру чем Subversion SVN настроен так, что история проекта никогда не изменяется. Git позволяет изменять предыдущие фиксации и изменения с помощью таких инструментов, как git rebase.",
                    'resource': 'https://ru.wikipedia.org/wiki/Git',
                },
                {
                    'type': 'text',
                    'body': 'Что такое «область подготовленных файлов» или «индекс» в GIT?',
                    'answers': "Это этап перед самим коммитом. Пока набор изменений находится в область подготовленных файлов, git позволяет вам редактировать его по своему усмотрению (заменять поэтапные файлы на другие версии поэтапных файлов, удалять изменения из этапа и т.д.)",
                    'resource': 'https://ru.wikipedia.org/wiki/Git',
                },
            ],
            [
                {
                    'type': 'text',
                    'body': 'Каковы преимущества использования GIT?',
                    'answers': "Резервирование и репликация данных Высокая доступность Возможности ветвления Работает быстро и надежно Работает онлайн",
                    'resource': 'https://ru.wikipedia.org/wiki/Git',
                },
                {
                    'type': 'text',
                    'body': 'Как создать репозиторий в GIT?',
                    'answers': "В GIT для создания репозитория создайте каталог для проекта, если он не существует, а затем запустите команду «git init». Эта команда создаёт в текущем каталоге новый подкаталог с именем .git содержащий все необходимые файлы репозитория",
                    'resource': 'https://ru.wikipedia.org/wiki/Git',
                },
                {
                    'type': 'text',
                    'body': 'Что такое GIT stash?',
                    'answers': "stash принимает текущее состояние рабочего каталога и индекса и помещает его в стек для последующего использования и возвращает вам чистый рабочий каталог. Поэтому в случае, если вы находитесь в середине чего-то и вам нужно перейти на другую работу, и в то же время вы не хотите терять текущие изменения, тогда вы можете использовать GIT stash",
                    'resource': 'https://ru.wikipedia.org/wiki/Git',
                },
            ],
            [
                {
                    'type': 'text',
                    'body': 'Для чего используется «git status»?',
                    'answers': ['разницу между рабочим каталогом и индексом', 'Цель разветвления',
                                'текущее состояние рабочего каталога'],
                    'resource': 'https://ru.wikipedia.org/wiki/Git',
                },
                {
                    'type': 'text',
                    'body': 'Для чего используется «git status»?',
                    'answers': "показывает разницу между рабочим каталогом и индексом.",
                    'resource': 'https://ru.wikipedia.org/wiki/Git',
                },
                {
                    'type': 'text',
                    'body': 'Какова цель ветвления в GIT?',
                    'answers': "Цель разветвления в GIT заключается в том, что вы можете создать свою собственную ветку и перепрыгнуть между этими ветвями. Это позволит вам перейти к разным версиям того же проекта.",
                    'resource': 'https://ru.wikipedia.org/wiki/Git',
                },
            ]
        ]
    },
    'samples': {
        'win_ans': '''
            Это правильный ответ!
            Следующий вопрос...
            {}
            Варианты ответов:
            {}
        ''',
        'lose_ans': '''
            Это неправильный ответ!
            Ты можешь почитать про это поподробнее: {}
            Следующий вопрос...
            {}
            Варианты ответов:
            {}
        ''',
        'quest_repeat': '''
            Используй только предложенные варианты ответов. Возможно, я не расслышала твой ответ.
            Повторю варианты ответов:
            {}
        ''',
    }
}
